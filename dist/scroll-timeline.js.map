{"version":3,"file":"scroll-timeline.js","sources":["../src/utils.js","../src/scroll-timeline-base.js","../src/proxy-animation.js","../src/intersection-based-offset.js","../src/index.js"],"sourcesContent":["export function parseLength(obj) {\n  if (obj instanceof CSSUnitValue)\n    return obj;\n  let matches = obj.trim().match(/^(-?[0-9]*\\.?[0-9]*)(px|%)$/);\n  if (matches) {\n    let value = matches[1];\n    // The unit for % is percent.\n    let unit = matches[2] == '%' ? 'percent' : matches[2];\n    return new CSSUnitValue(value, unit);\n  }\n  return null;\n}\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { parseLength } from \"./utils\";\n\nconst AUTO = new CSSKeywordValue(\"auto\");\n\nlet scrollTimelineOptions = new WeakMap();\nlet extensionScrollOffsetFunctions = [];\n\nfunction scrollEventSource(scrollSource) {\n  if (scrollSource === document.scrollingElement) return document;\n  return scrollSource;\n}\n\n/**\n * Updates the currentTime for all Web Animation instanced attached to a ScrollTimeline instance\n * @param scrollTimelineInstance {ScrollTimeline}\n */\nfunction updateInternal(scrollTimelineInstance) {\n  let animations = scrollTimelineOptions.get(scrollTimelineInstance).animations;\n  if (animations.length === 0) return;\n  let currentTime = scrollTimelineInstance.currentTime;\n  for (let i = 0; i < animations.length; i++) {\n    // The web-animations spec says to throw a TypeError if you try to seek to\n    // an unresolved time value from a resolved time value, so to polyfill the\n    // expected behavior we cancel the underlying animation.\n    if (currentTime == null) {\n      if (animations[i].playState === \"paused\") animations[i].cancel();\n    } else {\n      animations[i].currentTime = currentTime;\n    }\n  }\n}\n\n/**\n * Calculates the number of milliseconds mapped to the scroll range in case of AUTO\n *  in case developer provided timeRange, we use that directly.\n * @param scrollTimeline {ScrollTimeline}\n * @returns {Number}\n */\nfunction calculateTimeRange(scrollTimeline) {\n  let timeRange = scrollTimeline.timeRange;\n  if (timeRange === AUTO) {\n    timeRange = 0;\n    let animations = scrollTimelineOptions.get(scrollTimeline).animations;\n    for (let i = 0; i < animations.length; i++) {\n      timeRange = Math.max(timeRange, calculateTargetEffectEnd(animations[i]));\n    }\n    if (timeRange === Infinity) timeRange = 0;\n  }\n  return timeRange;\n}\n\n/**\n * Determines target effect end based on animation duration, iterations count and start and end delays\n *  returned value should always be positive\n * @param options {Animation} animation\n * @returns {number}\n */\nexport function calculateTargetEffectEnd(animation) {\n  return animation.effect.getComputedTiming().activeDuration;\n}\n\n/**\n * Enables the usage of custom parser and evaluator function, utilized by intersection based offset.\n * @param parseFunction {Function}\n * @param evaluateFunction {Function}\n * @returns {Array} all currently installed parsers\n */\nexport function installScrollOffsetExtension(parseFunction, evaluateFunction) {\n  extensionScrollOffsetFunctions.push({\n    parse: parseFunction,\n    evaluate: evaluateFunction,\n  });\n  return extensionScrollOffsetFunctions;\n}\n\n/**\n * Calculates scroll offset based on orientation and scrollSource geometry\n * @param scrollSource {DOMElement}\n * @param orientation {String}\n * @returns {number}\n */\nexport function calculateMaxScrollOffset(scrollSource, orientation) {\n  // TODO: Support other writing directions.\n  if (orientation === \"block\") orientation = \"vertical\";\n  else if (orientation === \"inline\") orientation = \"horizontal\";\n  if (orientation === \"vertical\")\n    return scrollSource.scrollHeight - scrollSource.clientHeight;\n  else if (orientation === \"horizontal\")\n    return scrollSource.scrollWidth - scrollSource.clientWidth;\n}\n\nexport function calculateScrollOffset(\n  autoValue,\n  scrollSource,\n  orientation,\n  offset,\n  fn\n) {\n  if (fn)\n    return fn(\n      scrollSource,\n      orientation,\n      offset,\n      autoValue === \"0%\" ? \"start\" : \"end\"\n    );\n  // TODO: Support other writing directions.\n  if (orientation === \"block\") orientation = \"vertical\";\n  else if (orientation === \"inline\") orientation = \"horizontal\";\n\n  let maxValue =\n    orientation === \"vertical\"\n      ? scrollSource.scrollHeight - scrollSource.clientHeight\n      : scrollSource.scrollWidth - scrollSource.clientWidth;\n  let parsed = parseLength(offset === AUTO ? autoValue : offset);\n  if (parsed.unit === \"percent\") return (parseFloat(parsed.value) * maxValue) / 100;\n  return parseFloat(parsed.value);\n}\n\n/**\n * Removes a Web Animation instance from ScrollTimeline\n * @param scrollTimeline {ScrollTimeline}\n * @param animation {Animation}\n * @param options {Object}\n */\nexport function removeAnimation(scrollTimeline, animation) {\n  let animations = scrollTimelineOptions.get(scrollTimeline).animations;\n  let index = animations.indexOf(animation);\n  if (index === -1) return;\n  animations.splice(index, 1);\n}\n\n/**\n * Attaches a Web Animation instance to ScrollTimeline\n * @param scrollTimeline {ScrollTimeline}\n * @param animation {Animation}\n * @param options {Object}\n */\nexport function addAnimation(scrollTimeline, animation, options) {\n  let animations = scrollTimelineOptions.get(scrollTimeline).animations;\n  animations.push(animation);\n  updateInternal(scrollTimeline);\n}\n\n// TODO: this is a private function used for unit testing add function\nexport function _getStlOptions(scrollTimeline) {\n  return scrollTimelineOptions.get(scrollTimeline);\n}\n\nexport class ScrollTimeline {\n  constructor(options) {\n    scrollTimelineOptions.set(this, {\n      scrollSource: null,\n      orientation: \"block\",\n      startScrollOffset: AUTO,\n      endScrollOffset: AUTO,\n      timeRange: AUTO,\n      fill: \"none\",\n\n      // Internal members\n      animations: [],\n    });\n    this.scrollSource =\n      (options && options.scrollSource) || document.scrollingElement;\n    this.orientation = (options && options.orientation) || \"block\";\n    this.startScrollOffset = (options && options.startScrollOffset) || AUTO;\n    this.endScrollOffset = (options && options.endScrollOffset) || AUTO;\n    this.timeRange = (options && options.timeRange) || AUTO;\n    this.fill = (options && options.fill) || \"none\";\n  }\n\n  set scrollSource(element) {\n    if (this.scrollSource)\n      scrollEventSource(this.scrollSource).removeEventListener(\"scroll\", () =>\n        updateInternal(this)\n      );\n    if (!(element instanceof Element)) element = document.scrollingElement;\n    scrollTimelineOptions.get(this).scrollSource = element;\n    scrollEventSource(element).addEventListener(\"scroll\", () =>\n      updateInternal(this)\n    );\n    updateInternal(this);\n  }\n\n  get scrollSource() {\n    return scrollTimelineOptions.get(this).scrollSource;\n  }\n\n  set orientation(orientation) {\n    if (\n      [\"block\", \"inline\", \"horizontal\", \"vertical\"].indexOf(orientation) === -1\n    ) {\n      throw TypeError(\"Invalid orientation\");\n    }\n    scrollTimelineOptions.get(this).orientation = orientation;\n    updateInternal(this);\n  }\n\n  get orientation() {\n    return scrollTimelineOptions.get(this).orientation;\n  }\n\n  set startScrollOffset(offset) {\n    if (offset == \"auto\")\n      offset = AUTO;\n    let currentStlOptions = scrollTimelineOptions.get(this);\n    // Allow extensions to override scroll offset calculation.\n    currentStlOptions.startScrollOffsetFunction = null;\n    for (let i = 0; i < extensionScrollOffsetFunctions.length; i++) {\n      let result = extensionScrollOffsetFunctions[i].parse(offset);\n      if (result !== undefined) {\n        offset = result;\n        currentStlOptions.startScrollOffsetFunction =\n          extensionScrollOffsetFunctions[i].evaluate;\n        break;\n      }\n    }\n    if (offset != AUTO && !scrollTimelineOptions.get(this).startScrollOffsetFunction) {\n      let parsed = parseLength(offset);\n      if (!parsed || !parsed.unit)\n        throw TypeError(\"Invalid start offset.\");\n    }\n    currentStlOptions.startScrollOffset = offset;\n    updateInternal(this);\n  }\n\n  get startScrollOffset() {\n    return scrollTimelineOptions.get(this).startScrollOffset;\n  }\n\n  set endScrollOffset(offset) {\n    if (offset == \"auto\")\n      offset = AUTO;\n    // Allow extensions to override scroll offset calculation.\n    scrollTimelineOptions.get(this).endScrollOffsetFunction = null;\n    for (let i = 0; i < extensionScrollOffsetFunctions.length; i++) {\n      let result = extensionScrollOffsetFunctions[i].parse(offset);\n      if (result !== undefined) {\n        offset = result;\n        scrollTimelineOptions.get(this).endScrollOffsetFunction =\n          extensionScrollOffsetFunctions[i].evaluate;\n        break;\n      }\n    }\n    if (offset != AUTO && !scrollTimelineOptions.get(this).startScrollOffsetFunction) {\n      let parsed = parseLength(offset);\n      if (!parsed || parsed.unit == \"number\")\n        throw TypeError(\"Invalid end offset.\");\n    }\n    scrollTimelineOptions.get(this).endScrollOffset = offset;\n    updateInternal(this);\n  }\n\n  get endScrollOffset() {\n    return scrollTimelineOptions.get(this).endScrollOffset;\n  }\n\n  set timeRange(offset) {\n    scrollTimelineOptions.get(this).timeRange = offset;\n    updateInternal(this);\n  }\n\n  get timeRange() {\n    return scrollTimelineOptions.get(this).timeRange;\n  }\n\n  get currentTime() {\n    // Per https://wicg.github.io/scroll-animations/#current-time-algorithm\n    // Step 1\n    let unresolved = null;\n    if (!this.scrollSource) return unresolved;\n    let startOffset = calculateScrollOffset(\n      \"0%\",\n      this.scrollSource,\n      this.orientation,\n      this.startScrollOffset,\n      scrollTimelineOptions.get(this).startScrollOffsetFunction\n    );\n    let endOffset = calculateScrollOffset(\n      \"100%\",\n      this.scrollSource,\n      this.orientation,\n      this.endScrollOffset,\n      scrollTimelineOptions.get(this).endScrollOffsetFunction\n    );\n    let timeRange = calculateTimeRange(this);\n\n    // Step 2\n    // TODO: Support other writing directions.\n    let currentScrollOffset = this.scrollSource.scrollTop\n    if (this.orientation === 'inline' || this.orientation === 'horizontal') {\n      currentScrollOffset = this.scrollSource.scrollLeft\n    }\n\n    // Step 3\n    if (currentScrollOffset < startOffset) {\n      if (this.fill === \"none\" || this.fill === \"forwards\") return unresolved;\n      return 0;\n    }\n\n    // Step 4\n    if (currentScrollOffset >= endOffset) {\n      if (\n        endOffset <\n          calculateMaxScrollOffset(this.scrollSource, this.orientation) &&\n        (this.fill === \"none\" || this.fill === \"backwards\")\n      ) {\n        return unresolved;\n      }\n      return timeRange;\n    }\n\n    // Step 5\n    return (\n      ((currentScrollOffset - startOffset) / (endOffset - startOffset)) *\n      timeRange\n    );\n  }\n\n  get __polyfill() {\n    return true;\n  }\n}\n","import {\n  ScrollTimeline,\n  installScrollOffsetExtension,\n  addAnimation,\n  removeAnimation\n} from \"./scroll-timeline-base\";\n\nconst nativeElementAnimate = window.Element.prototype.animate;\nconst nativeAnimation = window.Animation;\n\n/**\n * Decides whether to use native Element.prototype.animate function in regular fashion or pass it to our polyfill\n *  so its current time is driven by scroll event\n * @param keyframes {Object} array of keyframe objects\n * @param options {Object} WAAPI options object\n * @returns {Function}\n */\n\n// Create an alternate Animation class which proxies API requests.\n// TODO: Create a full-fledged proxy so missing methods are automatically\n// fetched from Animation.\nlet proxyAnimations = new WeakMap();\nexport class ProxyAnimation {\n  constructor(effect, timeline) {\n    if (effect instanceof nativeAnimation) {\n      proxyAnimations.set(this, {\n        animation: effect,\n        timeline,\n        playState: \"idle\",\n      });\n      return;\n    }\n    const isScrollAnimation = timeline && timeline instanceof ScrollTimeline;\n    const animationTimeline = isScrollAnimation ? undefined : timeline;\n    proxyAnimations.set(this, {\n      animation: new nativeAnimation(effect, animationTimeline),\n      timeline: isScrollAnimation ? timeline : undefined,\n      playState: isScrollAnimation ? \"idle\" : null,\n    });\n  }\n\n  get effect() {\n    return proxyAnimations.get(this).animation.effect;\n  }\n  set effect(newEffect) {\n    return proxyAnimations.get(this).animation.effect = newEffect;\n  }\n\n  get timeline() {\n    const internalTimeline = proxyAnimations.get(this).timeline;\n    if (internalTimeline !== undefined)\n      return internalTimeline;\n    return proxyAnimations.get(this).animation.timeline;\n  }\n\n  get startTime() {\n    const internalPlayState = proxyAnimations.get(this).playState;\n    if (!internalPlayState)\n      return proxyAnimations.get(this).animation.startTime;\n    if (internalPlayState == \"running\")\n      return 0;\n    return null;\n  }\n  set startTime(value) {\n    proxyAnimations.get(this).animation.startTime = value;\n  }\n\n  get currentTime() {\n    return proxyAnimations.get(this).animation.currentTime;\n  }\n  set currentTime(value) {\n    proxyAnimations.get(this).animation.currentTime = value;\n  }\n\n  get playbackRate() {\n    return proxyAnimations.get(this).animation.playbackRate;\n  }\n  set playbackRate(value) {\n    proxyAnimations.get(this).animation.playbackRate = value;\n  }\n\n  get playState() {\n    const internalPlayState = proxyAnimations.get(this).playState;\n    if (internalPlayState)\n      return internalPlayState;\n    return proxyAnimations.get(this).animation.playState;\n  }\n\n  get replaceState() {\n    return proxyAnimations.get(this).animation.pending;\n  }\n\n  get pending() {\n    return proxyAnimations.get(this).animation.pending;\n  }\n\n  finish() {\n    proxyAnimations.get(this).animation.finish();\n    let internalTimeline = proxyAnimations.get(this).timeline;\n    if (!internalTimeline) {\n      proxyAnimations.get(this).animation.play();\n      return;\n    }\n    if (proxyAnimations.get(this).playState == \"finished\")\n      return;\n    proxyAnimations.get(this).playState = \"finished\";\n    removeAnimation(internalTimeline, proxyAnimations.get(this).animation);\n  }\n\n  play() {\n    let internalTimeline = proxyAnimations.get(this).timeline;\n    if (!internalTimeline) {\n      proxyAnimations.get(this).animation.play();\n      return;\n    }\n    if (proxyAnimations.get(this).animation.playState != \"paused\") {\n      proxyAnimations.get(this).animation.play();\n      proxyAnimations.get(this).animation.pause();\n    }\n    if (proxyAnimations.get(this).playState == \"running\")\n      return;\n    addAnimation(internalTimeline, proxyAnimations.get(this).animation);\n    proxyAnimations.get(this).playState = \"running\";\n  }\n\n  pause() {\n    let internalTimeline = proxyAnimations.get(this).timeline;\n    if (!internalTimeline) {\n      proxyAnimations.get(this).animation.pause();\n      return;\n    }\n    if (proxyAnimations.get(this).playState == \"paused\")\n      return;\n    proxyAnimations.get(this).playState = \"paused\";\n    removeAnimation(internalTimeline, proxyAnimations.get(this).animation);\n  }\n\n  reverse() {\n    proxyAnimations.get(this).animation.reverse();\n  }\n\n  updatePlaybackRate(rate) {\n    proxyAnimations.get(this).animation.updatePlaybackRate(rate);\n  }\n\n  persist() {\n    proxyAnimations.get(this).animation.persist();\n  }\n\n  get id() {\n    return proxyAnimations.get(this).animation.id;\n  }\n\n  cancel() {\n    proxyAnimations.get(this).animation.cancel();\n    let internalTimeline = proxyAnimations.get(this).timeline;\n    if (!internalTimeline)\n      return;\n    if (proxyAnimations.get(this).playState == \"idle\" ||\n        proxyAnimations.get(this).playState == \"finished\")\n      return;\n    if (proxyAnimations.get(this).playState == \"running\")\n      removeAnimation(internalTimeline, proxyAnimations.get(this).animation);\n    proxyAnimations.get(this).playState = \"finished\";\n  }\n\n  get onfinish() {\n    return proxyAnimations.get(this).animation.onfinish;\n  }\n  set onfinish(value) {\n    proxyAnimations.get(this).animation.onfinish = value;\n  }\n  get oncancel() {\n    return proxyAnimations.get(this).animation.oncancel;\n  }\n  set oncancel(value) {\n    proxyAnimations.get(this).animation.oncancel = value;\n  }\n  get onremove() {\n    return proxyAnimations.get(this).animation.onremove;\n  }\n  set onremove(value) {\n    proxyAnimations.get(this).animation.onremove = value;\n  }\n\n  get finished() {\n    proxyAnimations.get(this).animation.finished;\n  }\n\n  get ready() {\n    proxyAnimations.get(this).animation.ready;\n  }\n\n};\n\nexport function animate(keyframes, options) {\n  let timeline = options.timeline;\n  if (!timeline || !(timeline instanceof ScrollTimeline)) {\n    return nativeElementAnimate.apply(this, [keyframes, options]);\n  }\n  delete options.timeline;\n  let animation = nativeElementAnimate.apply(this, [keyframes, options]);\n  // TODO: Create a proxy for the animation to control and fake the animation\n  // play state.\n  animation.pause();\n  let proxyAnimation = new ProxyAnimation(animation, timeline);\n  proxyAnimation.play();\n  return proxyAnimation;\n};\n\n\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { parseLength } from \"./utils\";\n\nlet IntersectionOptions = new WeakMap();\n\n// Margin is stored as a 4 element array [top, right, bottom, left] but can be\n// specified using anywhere from 1 - 4 elements. This map defines how to convert\n// various length inputs to their components.\nconst TOP = 0;\nconst RIGHT = 1;\nconst BOTTOM = 2;\nconst LEFT = 3;\nconst MARGIN_MAP = [\n  // 1 length maps to all positions.\n  [[TOP, RIGHT, BOTTOM, LEFT]],\n  // 2 lengths maps to vertical and horizontal margins.\n  [\n    [TOP, BOTTOM],\n    [RIGHT, LEFT],\n  ],\n  // 3 lengths maps to top, horizontal, bottom margins.\n  [[TOP], [RIGHT, LEFT], [BOTTOM]],\n  // 4 lengths maps to each component.\n  [[TOP], [RIGHT], [BOTTOM], [LEFT]],\n];\n\nclass IntersectionBasedOffset {\n  constructor(value) {\n    IntersectionOptions.set(this, {\n      target: null,\n      edge: \"start\",\n      threshold: 0,\n      rootMargin: [\n        [0, \"px\"],\n        [0, \"px\"],\n        [0, \"px\"],\n        [0, \"px\"],\n      ],\n    });\n    this.target = value.target;\n    this.edge = value.edge || \"start\";\n    this.threshold = value.threshold || 0;\n    this.rootMargin = value.rootMargin || \"0px 0px 0px 0px\";\n    this.clamp = value.clamp || false;\n  }\n\n  set target(element) {\n    if (!(element instanceof Element)) {\n      IntersectionOptions.get(this).target = null;\n      throw Error(\"Intersection target must be an element.\");\n    }\n    IntersectionOptions.get(this).target = element;\n  }\n\n  get target() {\n    return IntersectionOptions.get(this).target;\n  }\n\n  set edge(value) {\n    if ([\"start\", \"end\"].indexOf(value) == -1) return;\n    IntersectionOptions.get(this).edge = value;\n  }\n\n  get edge() {\n    return IntersectionOptions.get(this).edge;\n  }\n\n  set threshold(value) {\n    let threshold = parseFloat(value);\n    // Throw a TypeError for a parse error.\n    if (threshold != threshold)\n      throw TypeError(\"Invalid threshold.\");\n    // Throw a RangeError for out of range threshold:\n    // https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n    if (threshold < 0 || threshold > 1)\n      throw RangeError(\"threshold must be in the range [0, 1]\");\n    IntersectionOptions.get(this).threshold = threshold;\n  }\n\n  get threshold() {\n    return IntersectionOptions.get(this).threshold;\n  }\n\n  set rootMargin(value) {\n    let margins = value.split(/ +/);\n    if (margins.length < 1 || margins.length > 4)\n      throw TypeError(\n        \"rootMargin must contain between 1 and 4 length components\"\n      );\n    let parsedMargins = [[], [], [], []];\n    for (let i = 0; i < margins.length; i++) {\n      let parsedValue = parseLength(margins[i]);\n      if (!parsedValue) throw TypeError(\"Unrecognized rootMargin length\");\n      let positions = MARGIN_MAP[margins.length - 1][i];\n      for (let j = 0; j < positions.length; j++) {\n        parsedMargins[positions[j]] = [\n          parseFloat(parsedValue.value),\n          parsedValue.unit,\n        ];\n      }\n    }\n    IntersectionOptions.get(this).rootMargin = parsedMargins;\n  }\n\n  get rootMargin() {\n    // TODO: Simplify to the shortest matching specification for the given margins.\n    return IntersectionOptions.get(this)\n      .rootMargin.map((margin) => {\n        return margin.join(\"\");\n      })\n      .join(\" \");\n  }\n\n  set clamp(value) {\n    // This is just for testing alternative proposals - not intended to be part\n    // of the specification.\n    IntersectionOptions.get(this).clamp = !!value;\n  }\n}\n\nexport function parseOffset(value) {\n  if (value.target) return new IntersectionBasedOffset(value);\n}\n\nfunction resolveLength(length, containerSize) {\n  if (length[1] == \"percent\") return (length[0] * containerSize) / 100;\n  // Assumption is only px or % will be passed in.\n  // TODO: Support other length types (e.g. em, vh, etc).\n  return length[0];\n}\n\nexport function calculateOffset(scrollSource, orientation, offset, startOrEnd) {\n  // TODO: Support other writing directions.\n  if (orientation == \"block\") orientation = \"vertical\";\n  else if (orientation == \"inline\") orientation = \"horizontal\";\n  let originalViewport =\n    scrollSource == document.scrollingElement\n      ? {\n          left: 0,\n          right: scrollSource.clientWidth,\n          top: 0,\n          bottom: scrollSource.clientHeight,\n          width: scrollSource.clientWidth,\n          height: scrollSource.clientHeight,\n        }\n      : scrollSource.getBoundingClientRect();\n\n  // Resolve margins and offset viewport.\n  let parsedMargins = IntersectionOptions.get(offset).rootMargin;\n  let computedMargins = [];\n  for (let i = 0; i < 4; i++) {\n    computedMargins.push(\n      resolveLength(\n        parsedMargins[i],\n        i % 2 == 0 ? originalViewport.height : originalViewport.width\n      )\n    );\n  }\n  let viewport = {\n    left: originalViewport.left - computedMargins[LEFT],\n    right: originalViewport.right + computedMargins[RIGHT],\n    width:\n      originalViewport.right -\n      originalViewport.left +\n      computedMargins[LEFT] +\n      computedMargins[RIGHT],\n    top: originalViewport.top - computedMargins[TOP],\n    bottom: originalViewport.bottom + computedMargins[BOTTOM],\n    height:\n      originalViewport.bottom -\n      originalViewport.top +\n      computedMargins[TOP] +\n      computedMargins[BOTTOM],\n  };\n\n  let clamped = IntersectionOptions.get(offset).clamp;\n  let target = offset.target.getBoundingClientRect();\n  let threshold = offset.threshold;\n  // Invert threshold for start position.\n  if (offset.edge == \"start\") threshold = 1 - threshold;\n  // Projected point into the scroller scroll range.\n  if (orientation == \"vertical\") {\n    let point =\n      target.top +\n      target.height * threshold -\n      viewport.top +\n      scrollSource.scrollTop;\n    if (clamped) {\n      if (offset.edge == \"end\") return Math.max(0, point - viewport.height);\n      return Math.min(point, scrollSource.scrollHeight - viewport.height);\n    } else {\n      if (offset.edge == \"end\") return point - viewport.height;\n      return point;\n    }\n  } else {\n    // orientation == 'horizontal'\n    let point =\n      target.left +\n      target.width * threshold -\n      viewport.left +\n      scrollSource.scrollLeft;\n    if (clamped) {\n      if (offset.edge == \"end\") return Math.max(0, point - viewport.width);\n      return Math.min(point, scrollSource.scrollWidth - viewport.width);\n    } else {\n      if (offset.edge == \"end\") return point - viewport.width;\n      return point;\n    }\n  }\n}\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  ScrollTimeline,\n  installScrollOffsetExtension\n} from \"./scroll-timeline-base\";\nimport {\n  animate,\n  ProxyAnimation\n} from \"./proxy-animation.js\";\nimport { calculateOffset, parseOffset } from \"./intersection-based-offset\";\n\ninstallScrollOffsetExtension(parseOffset, calculateOffset);\n\nif (\n  !Reflect.defineProperty(window, \"ScrollTimeline\", { value: ScrollTimeline })\n) {\n  throw Error(\n    \"Error installing ScrollTimeline polyfill: could not attach ScrollTimeline to window\"\n  );\n}\n\nif (!Reflect.defineProperty(Element.prototype, \"animate\", { value: animate })) {\n  throw Error(\n    \"Error installing ScrollTimeline polyfill: could not attach WAAPI's animate to DOM Element\"\n  );\n}\nif (!Reflect.defineProperty(window, \"Animation\", {value: ProxyAnimation})) {\n  throw Error(\"Error installing Animation constructor.\");\n}\n"],"names":["parseLength","obj","CSSUnitValue","matches","trim","match","AUTO","CSSKeywordValue","scrollTimelineOptions","WeakMap","extensionScrollOffsetFunctions","scrollEventSource","scrollSource","document","scrollingElement","updateInternal","scrollTimelineInstance","animations","get","length","currentTime","i","playState","cancel","calculateScrollOffset","autoValue","orientation","offset","fn","maxValue","scrollHeight","clientHeight","scrollWidth","clientWidth","parsed","unit","parseFloat","value","removeAnimation","scrollTimeline","animation","index","indexOf","splice","ScrollTimeline","options","set","this","startScrollOffset","endScrollOffset","timeRange","fill","_createClass","element","removeEventListener","_this","Element","addEventListener","TypeError","currentStlOptions","startScrollOffsetFunction","result","parse","undefined","evaluate","endScrollOffsetFunction","startOffset","endOffset","Math","max","effect","getComputedTiming","activeDuration","Infinity","calculateTimeRange","currentScrollOffset","scrollTop","scrollLeft","nativeElementAnimate","window","prototype","animate","nativeAnimation","Animation","proxyAnimations","ProxyAnimation","timeline","isScrollAnimation","finish","internalTimeline","play","pause","push","reverse","updatePlaybackRate","rate","persist","newEffect","internalPlayState","startTime","playbackRate","pending","id","onfinish","oncancel","onremove","IntersectionOptions","MARGIN_MAP","IntersectionBasedOffset","target","edge","threshold","rootMargin","clamp","Error","RangeError","margins","split","parsedMargins","parsedValue","positions","j","map","margin","join","startOrEnd","originalViewport","left","right","top","bottom","width","height","getBoundingClientRect","computedMargins","viewport","clamped","point","min","Reflect","defineProperty","keyframes","apply","proxyAnimation"],"mappings":"oPAAgBA,EAAYC,GAC1B,GAAIA,aAAeC,aACjB,OAAOD,EACT,IAAIE,EAAUF,EAAIG,OAAOC,MAAM,+BAC/B,OAAIF,MAISD,aAHCC,EAAQ,GAEK,KAAdA,EAAQ,GAAY,UAAYA,EAAQ,SCSvD,IAAMG,EAAO,IAAIC,gBAAgB,QAE7BC,EAAwB,IAAIC,QAC5BC,EAAiC,GAErC,SAASC,EAAkBC,GACzB,OAAIA,IAAiBC,SAASC,iBAAyBD,SAChDD,EAOT,SAASG,EAAeC,GACtB,IAAIC,EAAaT,EAAsBU,IAAIF,GAAwBC,WACnE,GAA0B,IAAtBA,EAAWE,OAEf,IADA,IAAIC,EAAcJ,EAAuBI,YAChCC,EAAI,EAAGA,EAAIJ,EAAWE,OAAQE,IAIlB,MAAfD,EAC8B,WAA5BH,EAAWI,GAAGC,WAAwBL,EAAWI,GAAGE,SAExDN,EAAWI,GAAGD,YAAcA,EAgElC,SAAgBI,EACdC,EACAb,EACAc,EACAC,EACAC,GAEA,GAAIA,EACF,OAAOA,EACLhB,EACAc,EACAC,EACc,OAAdF,EAAqB,QAAU,OAGf,UAAhBC,EAAyBA,EAAc,WAClB,WAAhBA,IAA0BA,EAAc,cAEjD,IAAIG,EACc,aAAhBH,EACId,EAAakB,aAAelB,EAAamB,aACzCnB,EAAaoB,YAAcpB,EAAaqB,YAC1CC,EAASlC,EAAY2B,IAAWrB,EAAOmB,EAAYE,GACvD,MAAoB,YAAhBO,EAAOC,KAA4BC,WAAWF,EAAOG,OAASR,EAAY,IACvEO,WAAWF,EAAOG,OAS3B,SAAgBC,EAAgBC,EAAgBC,GAC9C,IAAIvB,EAAaT,EAAsBU,IAAIqB,GAAgBtB,WACvDwB,EAAQxB,EAAWyB,QAAQF,IAChB,IAAXC,GACJxB,EAAW0B,OAAOF,EAAO,OAoBdG,aACX,WAAYC,GACVrC,EAAsBsC,IAAIC,KAAM,CAC9BnC,aAAc,KACdc,YAAa,QACbsB,kBAAmB1C,EACnB2C,gBAAiB3C,EACjB4C,UAAW5C,EACX6C,KAAM,OAGNlC,WAAY,KAEd8B,KAAKnC,aACFiC,GAAWA,EAAQjC,cAAiBC,SAASC,iBAChDiC,KAAKrB,YAAemB,GAAWA,EAAQnB,aAAgB,QACvDqB,KAAKC,kBAAqBH,GAAWA,EAAQG,mBAAsB1C,EACnEyC,KAAKE,gBAAmBJ,GAAWA,EAAQI,iBAAoB3C,EAC/DyC,KAAKG,UAAaL,GAAWA,EAAQK,WAAc5C,EACnDyC,KAAKI,KAAQN,GAAWA,EAAQM,MAAS,cAnB7CC,sCAsBmBC,cACXN,KAAKnC,cACPD,EAAkBoC,KAAKnC,cAAc0C,oBAAoB,SAAU,kBACjEvC,EAAewC,KAEbF,aAAmBG,UAAUH,EAAUxC,SAASC,kBACtDN,EAAsBU,IAAI6B,MAAMnC,aAAeyC,EAC/C1C,EAAkB0C,GAASI,iBAAiB,SAAU,kBACpD1C,EAAewC,KAEjBxC,EAAegC,sBAIf,OAAOvC,EAAsBU,IAAI6B,MAAMnC,+CAGzBc,GACd,IAC0E,IAAxE,CAAC,QAAS,SAAU,aAAc,YAAYgB,QAAQhB,GAEtD,MAAMgC,UAAU,uBAElBlD,EAAsBU,IAAI6B,MAAMrB,YAAcA,EAC9CX,EAAegC,sBAIf,OAAOvC,EAAsBU,IAAI6B,MAAMrB,oDAGnBC,GACN,QAAVA,IACFA,EAASrB,GACX,IAAIqD,EAAoBnD,EAAsBU,IAAI6B,MAElDY,EAAkBC,0BAA4B,KAC9C,IAAK,IAAIvC,EAAI,EAAGA,EAAIX,EAA+BS,OAAQE,IAAK,CAC9D,IAAIwC,EAASnD,EAA+BW,GAAGyC,MAAMnC,GACrD,QAAeoC,IAAXF,EAAsB,CACxBlC,EAASkC,EACTF,EAAkBC,0BAChBlD,EAA+BW,GAAG2C,SACpC,OAGJ,GAAIrC,GAAUrB,IAASE,EAAsBU,IAAI6B,MAAMa,0BAA2B,CAChF,IAAI1B,EAASlC,EAAY2B,GACzB,IAAKO,IAAWA,EAAOC,KACrB,MAAMuB,UAAU,yBAEpBC,EAAkBX,kBAAoBrB,EACtCZ,EAAegC,sBAIf,OAAOvC,EAAsBU,IAAI6B,MAAMC,wDAGrBrB,GACJ,QAAVA,IACFA,EAASrB,GAEXE,EAAsBU,IAAI6B,MAAMkB,wBAA0B,KAC1D,IAAK,IAAI5C,EAAI,EAAGA,EAAIX,EAA+BS,OAAQE,IAAK,CAC9D,IAAIwC,EAASnD,EAA+BW,GAAGyC,MAAMnC,GACrD,QAAeoC,IAAXF,EAAsB,CACxBlC,EAASkC,EACTrD,EAAsBU,IAAI6B,MAAMkB,wBAC9BvD,EAA+BW,GAAG2C,SACpC,OAGJ,GAAIrC,GAAUrB,IAASE,EAAsBU,IAAI6B,MAAMa,0BAA2B,CAChF,IAAI1B,EAASlC,EAAY2B,GACzB,IAAKO,GAAyB,UAAfA,EAAOC,KACpB,MAAMuB,UAAU,uBAEpBlD,EAAsBU,IAAI6B,MAAME,gBAAkBtB,EAClDZ,EAAegC,sBAIf,OAAOvC,EAAsBU,IAAI6B,MAAME,gDAG3BtB,GACZnB,EAAsBU,IAAI6B,MAAMG,UAAYvB,EAC5CZ,EAAegC,sBAIf,OAAOvC,EAAsBU,IAAI6B,MAAMG,8CAOvC,IAAKH,KAAKnC,aAAc,OADP,KAEjB,IA7LqCA,EAAcc,EA6L/CwC,EAAc1C,EAChB,KACAuB,KAAKnC,aACLmC,KAAKrB,YACLqB,KAAKC,kBACLxC,EAAsBU,IAAI6B,MAAMa,2BAE9BO,EAAY3C,EACd,OACAuB,KAAKnC,aACLmC,KAAKrB,YACLqB,KAAKE,gBACLzC,EAAsBU,IAAI6B,MAAMkB,yBAE9Bf,EAtPR,SAA4BX,GAC1B,IAAIW,EAAYX,EAAeW,UAC/B,GAAIA,IAAc5C,EAAM,CACtB4C,EAAY,EAEZ,IADA,IAAIjC,EAAaT,EAAsBU,IAAIqB,GAAgBtB,WAClDI,EAAI,EAAGA,EAAIJ,EAAWE,OAAQE,IACrC6B,EAAYkB,KAAKC,IAAInB,EAAoCjC,EAAWI,GAcvDiD,OAAOC,oBAAoBC,gBAZxBC,WAAdvB,IAAwBA,EAAY,GAE1C,OAAOA,EA4OWwB,CAAmB3B,MAI/B4B,EAAsB5B,KAAKnC,aAAagE,UAM5C,MALyB,WAArB7B,KAAKrB,aAAiD,eAArBqB,KAAKrB,cACxCiD,EAAsB5B,KAAKnC,aAAaiE,YAItCF,EAAsBT,EACN,SAAdnB,KAAKI,MAAiC,aAAdJ,KAAKI,KA3BlB,OAgCbwB,GAAuBR,EAEvBA,GA7NiCvD,EA8NNmC,KAAKnC,aA5NlB,WAFiCc,EA8NDqB,KAAKrB,aA5N5BA,EAAc,WAClB,WAAhBA,IAA0BA,EAAc,cAC7B,aAAhBA,EACKd,EAAakB,aAAelB,EAAamB,aACzB,eAAhBL,EACAd,EAAaoB,YAAcpB,EAAaqB,sBAwN5B,SAAdc,KAAKI,MAAiC,cAAdJ,KAAKI,MApCjB,KAwCRD,GAKLyB,EAAsBT,IAAgBC,EAAYD,GACpDhB,qCAKF,kBCtUE4B,EAAuBC,OAAOvB,QAAQwB,UAAUC,QAChDC,EAAkBH,OAAOI,UAa3BC,EAAkB,IAAI3E,QACb4E,aACX,WAAYf,EAAQgB,GAClB,GAAIhB,aAAkBY,EACpBE,EAAgBtC,IAAIC,KAAM,CACxBP,UAAW8B,EACXgB,SAAAA,EACAhE,UAAW,aAJf,CAQA,IAAMiE,EAAoBD,GAAYA,aAAoB1C,EAE1DwC,EAAgBtC,IAAIC,KAAM,CACxBP,UAAW,IAAI0C,EAAgBZ,EAFPiB,OAAoBxB,EAAYuB,GAGxDA,SAAUC,EAAoBD,OAAWvB,EACzCzC,UAAWiE,EAAoB,OAAS,QAf9C,2BA0EEC,OAAA,WACEJ,EAAgBlE,IAAI6B,MAAMP,UAAUgD,SACpC,IAAIC,EAAmBL,EAAgBlE,IAAI6B,MAAMuC,SAC5CG,EAIsC,YAAvCL,EAAgBlE,IAAI6B,MAAMzB,YAE9B8D,EAAgBlE,IAAI6B,MAAMzB,UAAY,WACtCgB,EAAgBmD,EAAkBL,EAAgBlE,IAAI6B,MAAMP,YAN1D4C,EAAgBlE,IAAI6B,MAAMP,UAAUkD,UASxCA,KAAA,WACE,IDyCyBnD,EAAgBC,ECzCrCiD,EAAmBL,EAAgBlE,IAAI6B,MAAMuC,SAC5CG,GAIgD,UAAjDL,EAAgBlE,IAAI6B,MAAMP,UAAUlB,YACtC8D,EAAgBlE,IAAI6B,MAAMP,UAAUkD,OACpCN,EAAgBlE,IAAI6B,MAAMP,UAAUmD,SAEK,WAAvCP,EAAgBlE,IAAI6B,MAAMzB,YDgCLiB,EC9BZkD,ED8B4BjD,EC9BV4C,EAAgBlE,IAAI6B,MAAMP,UD+B1ChC,EAAsBU,IAAIqB,GAAgBtB,WAChD2E,KAAKpD,GAChBzB,EAAewB,GChCb6C,EAAgBlE,IAAI6B,MAAMzB,UAAY,YAVpC8D,EAAgBlE,IAAI6B,MAAMP,UAAUkD,UAaxCC,MAAA,WACE,IAAIF,EAAmBL,EAAgBlE,IAAI6B,MAAMuC,SAC5CG,EAIsC,UAAvCL,EAAgBlE,IAAI6B,MAAMzB,YAE9B8D,EAAgBlE,IAAI6B,MAAMzB,UAAY,SACtCgB,EAAgBmD,EAAkBL,EAAgBlE,IAAI6B,MAAMP,YAN1D4C,EAAgBlE,IAAI6B,MAAMP,UAAUmD,WASxCE,QAAA,WACET,EAAgBlE,IAAI6B,MAAMP,UAAUqD,aAGtCC,mBAAA,SAAmBC,GACjBX,EAAgBlE,IAAI6B,MAAMP,UAAUsD,mBAAmBC,MAGzDC,QAAA,WACEZ,EAAgBlE,IAAI6B,MAAMP,UAAUwD,aAOtCzE,OAAA,WACE6D,EAAgBlE,IAAI6B,MAAMP,UAAUjB,SACpC,IAAIkE,EAAmBL,EAAgBlE,IAAI6B,MAAMuC,SAC5CG,GAEsC,QAAvCL,EAAgBlE,IAAI6B,MAAMzB,WACa,YAAvC8D,EAAgBlE,IAAI6B,MAAMzB,YAEa,WAAvC8D,EAAgBlE,IAAI6B,MAAMzB,WAC5BgB,EAAgBmD,EAAkBL,EAAgBlE,IAAI6B,MAAMP,WAC9D4C,EAAgBlE,IAAI6B,MAAMzB,UAAY,+CAzHtC,OAAO8D,EAAgBlE,IAAI6B,MAAMP,UAAU8B,qBAElC2B,GACT,OAAOb,EAAgBlE,IAAI6B,MAAMP,UAAU8B,OAAS2B,mCAIpD,IAAMR,EAAmBL,EAAgBlE,IAAI6B,MAAMuC,SACnD,YAAyBvB,IAArB0B,EACKA,EACFL,EAAgBlE,IAAI6B,MAAMP,UAAU8C,2CAI3C,IAAMY,EAAoBd,EAAgBlE,IAAI6B,MAAMzB,UACpD,OAAK4E,EAEoB,WAArBA,SADKd,EAAgBlE,IAAI6B,MAAMP,UAAU2D,wBAKjC9D,GACZ+C,EAAgBlE,IAAI6B,MAAMP,UAAU2D,UAAY9D,sCAIhD,OAAO+C,EAAgBlE,IAAI6B,MAAMP,UAAUpB,0BAE7BiB,GACd+C,EAAgBlE,IAAI6B,MAAMP,UAAUpB,YAAciB,uCAIlD,OAAO+C,EAAgBlE,IAAI6B,MAAMP,UAAU4D,2BAE5B/D,GACf+C,EAAgBlE,IAAI6B,MAAMP,UAAU4D,aAAe/D,oCAKnD,OAD0B+C,EAAgBlE,IAAI6B,MAAMzB,WAG7C8D,EAAgBlE,IAAI6B,MAAMP,UAAUlB,+CAI3C,OAAO8D,EAAgBlE,IAAI6B,MAAMP,UAAU6D,wCAI3C,OAAOjB,EAAgBlE,IAAI6B,MAAMP,UAAU6D,mCAyD3C,OAAOjB,EAAgBlE,IAAI6B,MAAMP,UAAU8D,oCAiB3C,OAAOlB,EAAgBlE,IAAI6B,MAAMP,UAAU+D,uBAEhClE,GACX+C,EAAgBlE,IAAI6B,MAAMP,UAAU+D,SAAWlE,mCAG/C,OAAO+C,EAAgBlE,IAAI6B,MAAMP,UAAUgE,uBAEhCnE,GACX+C,EAAgBlE,IAAI6B,MAAMP,UAAUgE,SAAWnE,mCAG/C,OAAO+C,EAAgBlE,IAAI6B,MAAMP,UAAUiE,uBAEhCpE,GACX+C,EAAgBlE,IAAI6B,MAAMP,UAAUiE,SAAWpE,mCAI/C+C,EAAgBlE,IAAI6B,oCAIpBqC,EAAgBlE,IAAI6B,eC9KpB2D,EAAsB,IAAIjG,QASxBkG,EAAa,CAEjB,CAAC,CANS,EACE,EACC,EACF,IAKX,CACE,CATQ,EAEG,GAQX,CATU,EAED,IAUX,CAAC,CAbS,GAaF,CAZI,EAED,GAUY,CAXV,IAab,CAAC,CAfS,GAeF,CAdI,GAcK,CAbJ,GAac,CAZhB,KAePC,aACJ,WAAYvE,GACVqE,EAAoB5D,IAAIC,KAAM,CAC5B8D,OAAQ,KACRC,KAAM,QACNC,UAAW,EACXC,WAAY,CACV,CAAC,EAAG,MACJ,CAAC,EAAG,MACJ,CAAC,EAAG,MACJ,CAAC,EAAG,SAGRjE,KAAK8D,OAASxE,EAAMwE,OACpB9D,KAAK+D,KAAOzE,EAAMyE,MAAQ,QAC1B/D,KAAKgE,UAAY1E,EAAM0E,WAAa,EACpChE,KAAKiE,WAAa3E,EAAM2E,YAAc,kBACtCjE,KAAKkE,MAAQ5E,EAAM4E,QAAS,yCAGnB5D,GACT,KAAMA,aAAmBG,SAEvB,MADAkD,EAAoBxF,IAAI6B,MAAM8D,OAAS,KACjCK,MAAM,2CAEdR,EAAoBxF,IAAI6B,MAAM8D,OAASxD,kBAIvC,OAAOqD,EAAoBxF,IAAI6B,MAAM8D,kCAG9BxE,IACiC,GAApC,CAAC,QAAS,OAAOK,QAAQL,KAC7BqE,EAAoBxF,IAAI6B,MAAM+D,KAAOzE,mBAIrC,OAAOqE,EAAoBxF,IAAI6B,MAAM+D,qCAGzBzE,GACZ,IAAI0E,EAAY3E,WAAWC,GAE3B,GAAI0E,GAAaA,EACf,MAAMrD,UAAU,sBAGlB,GAAIqD,EAAY,GAAKA,EAAY,EAC/B,MAAMI,WAAW,yCACnBT,EAAoBxF,IAAI6B,MAAMgE,UAAYA,kBAI1C,OAAOL,EAAoBxF,IAAI6B,MAAMgE,2CAGxB1E,GACb,IAAI+E,EAAU/E,EAAMgF,MAAM,MAC1B,GAAID,EAAQjG,OAAS,GAAKiG,EAAQjG,OAAS,EACzC,MAAMuC,UACJ,6DAGJ,IADA,IAAI4D,EAAgB,CAAC,GAAI,GAAI,GAAI,IACxBjG,EAAI,EAAGA,EAAI+F,EAAQjG,OAAQE,IAAK,CACvC,IAAIkG,EAAcvH,EAAYoH,EAAQ/F,IACtC,IAAKkG,EAAa,MAAM7D,UAAU,kCAElC,IADA,IAAI8D,EAAYb,EAAWS,EAAQjG,OAAS,GAAGE,GACtCoG,EAAI,EAAGA,EAAID,EAAUrG,OAAQsG,IACpCH,EAAcE,EAAUC,IAAM,CAC5BrF,WAAWmF,EAAYlF,OACvBkF,EAAYpF,MAIlBuE,EAAoBxF,IAAI6B,MAAMiE,WAAaM,kBAK3C,OAAOZ,EAAoBxF,IAAI6B,MAC5BiE,WAAWU,IAAI,SAACC,GACf,OAAOA,EAAOC,KAAK,MAEpBA,KAAK,iCAGAvF,GAGRqE,EAAoBxF,IAAI6B,MAAMkE,QAAU5E,WCvG5C,GHwDE3B,EAA+BkF,KAAK,CAClC9B,MEkDJ,SAA4BzB,GAC1B,GAAIA,EAAMwE,OAAQ,WAAWD,EAAwBvE,IFlDnD2B,SE4DJ,SAAgCpD,EAAcc,EAAaC,EAAQkG,GAE9C,SAAfnG,EAAwBA,EAAc,WAClB,UAAfA,IAAyBA,EAAc,cAgBhD,IAfA,IAXqBP,EAWjB2G,EACFlH,GAAgBC,SAASC,iBACrB,CACEiH,KAAM,EACNC,MAAOpH,EAAaqB,YACpBgG,IAAK,EACLC,OAAQtH,EAAamB,aACrBoG,MAAOvH,EAAaqB,YACpBmG,OAAQxH,EAAamB,cAEvBnB,EAAayH,wBAGff,EAAgBZ,EAAoBxF,IAAIS,GAAQqF,WAChDsB,EAAkB,GACbjH,EAAI,EAAGA,EAAI,EAAGA,IACrBiH,EAAgB1C,KA1BD,YADIzE,EA6BfmG,EAAcjG,IA5BT,GAAyBF,EAAO,IA6BrCE,EAAI,GAAK,EAAIyG,EAAiBM,OAASN,EAAiBK,OA7BG,IAG1DhH,EAAO,IA8Bd,IAAIoH,EACIT,EAAiBC,KAAOO,EApJrB,GAmJPC,EAIAT,EAAiBE,MACjBF,EAAiBC,KACjBO,EAzJO,GA0JPA,EA5JQ,GAqJRC,EAQGT,EAAiBG,IAAMK,EA9JpB,GAsJNC,EAWAT,EAAiBI,OACjBJ,EAAiBG,IACjBK,EAnKM,GAoKNA,EAlKS,GAqKTE,EAAU9B,EAAoBxF,IAAIS,GAAQsF,MAC1CJ,EAASlF,EAAOkF,OAAOwB,wBACvBtB,EAAYpF,EAAOoF,UAIvB,GAFmB,SAAfpF,EAAOmF,OAAiBC,EAAY,EAAIA,GAEzB,YAAfrF,EAA2B,CAC7B,IAAI+G,EACF5B,EAAOoB,IACPpB,EAAOuB,OAASrB,EAChBwB,EACA3H,EAAagE,UACf,OAAI4D,EACiB,OAAf7G,EAAOmF,KAAsB1C,KAAKC,IAAI,EAAGoE,EAAQF,GAC9CnE,KAAKsE,IAAID,EAAO7H,EAAakB,aAAeyG,GAEhC,OAAf5G,EAAOmF,KAAsB2B,EAAQF,EAClCE,EAIT,IAAIA,EACF5B,EAAOkB,KACPlB,EAAOsB,MAAQpB,EACfwB,EACA3H,EAAaiE,WACf,OAAI2D,EACiB,OAAf7G,EAAOmF,KAAsB1C,KAAKC,IAAI,EAAGoE,EAAQF,GAC9CnE,KAAKsE,IAAID,EAAO7H,EAAaoB,YAAcuG,GAE/B,OAAf5G,EAAOmF,KAAsB2B,EAAQF,EAClCE,MChMVE,QAAQC,eAAe7D,OAAQ,iBAAkB,CAAE1C,MAAOO,IAE3D,MAAMsE,MACJ,uFAIJ,IAAKyB,QAAQC,eAAepF,QAAQwB,UAAW,UAAW,CAAE3C,eFiKpCwG,EAAWhG,GACjC,IAAIyC,EAAWzC,EAAQyC,SACvB,KAAKA,GAAcA,aAAoB1C,GACrC,OAAOkC,EAAqBgE,MAAM/F,KAAM,CAAC8F,EAAWhG,WAE/CA,EAAQyC,SACf,IAAI9C,EAAYsC,EAAqBgE,MAAM/F,KAAM,CAAC8F,EAAWhG,IAG7DL,EAAUmD,QACV,IAAIoD,EAAiB,IAAI1D,EAAe7C,EAAW8C,GAEnD,OADAyD,EAAerD,OACRqD,KE5KP,MAAM7B,MACJ,6FAGJ,IAAKyB,QAAQC,eAAe7D,OAAQ,YAAa,CAAC1C,MAAOgD,IACvD,MAAM6B,MAAM"}