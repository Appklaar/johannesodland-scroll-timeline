{"version":3,"file":"scroll-timeline.js","sources":["../src/utils.js","../src/scroll-timeline-base.js","../src/proxy-animation.js","../src/intersection-based-offset.js","../src/index.js"],"sourcesContent":["export function parseLength(obj) {\n  if (obj instanceof CSSUnitValue || obj instanceof CSSMathSum)\n    return obj;\n  let matches = obj.trim().match(/^(-?[0-9]*\\.?[0-9]*)(px|%)$/);\n  if (matches) {\n    let value = matches[1];\n    // The unit for % is percent.\n    let unit = matches[2] == '%' ? 'percent' : matches[2];\n    return new CSSUnitValue(value, unit);\n  }\n  return null;\n}\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { parseLength } from \"./utils\";\n\nconst AUTO = new CSSKeywordValue(\"auto\");\n\nlet scrollTimelineOptions = new WeakMap();\nlet extensionScrollOffsetFunctions = [];\n\nfunction scrollEventSource(scrollSource) {\n  if (scrollSource === document.scrollingElement) return document;\n  return scrollSource;\n}\n\n/**\n * Updates the currentTime for all Web Animation instanced attached to a ScrollTimeline instance\n * @param scrollTimelineInstance {ScrollTimeline}\n */\nfunction updateInternal(scrollTimelineInstance) {\n  let animations = scrollTimelineOptions.get(scrollTimelineInstance).animations;\n  if (animations.length === 0) return;\n  let currentTime = scrollTimelineInstance.currentTime;\n  for (let i = 0; i < animations.length; i++) {\n    // The web-animations spec says to throw a TypeError if you try to seek to\n    // an unresolved time value from a resolved time value, so to polyfill the\n    // expected behavior we cancel the underlying animation.\n    if (currentTime == null) {\n      if (animations[i].playState === \"paused\") animations[i].cancel();\n    } else {\n      animations[i].currentTime = currentTime;\n    }\n  }\n}\n\n/**\n * Calculates the number of milliseconds mapped to the scroll range in case of AUTO\n *  in case developer provided timeRange, we use that directly.\n * @param scrollTimeline {ScrollTimeline}\n * @returns {Number}\n */\nfunction calculateTimeRange(scrollTimeline) {\n  let timeRange = scrollTimeline.timeRange;\n  if (timeRange == AUTO) {\n    timeRange = 0;\n    let animations = scrollTimelineOptions.get(scrollTimeline).animations;\n    for (let i = 0; i < animations.length; i++) {\n      timeRange = Math.max(timeRange, calculateTargetEffectEnd(animations[i]));\n    }\n    if (timeRange === Infinity) timeRange = 0;\n  }\n  return timeRange;\n}\n\n/**\n * Determines target effect end based on animation duration, iterations count and start and end delays\n *  returned value should always be positive\n * @param options {Animation} animation\n * @returns {number}\n */\nexport function calculateTargetEffectEnd(animation) {\n  return animation.effect.getComputedTiming().activeDuration;\n}\n\n/**\n * Enables the usage of custom parser and evaluator function, utilized by intersection based offset.\n * @param parseFunction {Function}\n * @param evaluateFunction {Function}\n * @returns {Array} all currently installed parsers\n */\nexport function installScrollOffsetExtension(parseFunction, evaluateFunction) {\n  extensionScrollOffsetFunctions.push({\n    parse: parseFunction,\n    evaluate: evaluateFunction,\n  });\n  return extensionScrollOffsetFunctions;\n}\n\n/**\n * Calculates scroll offset based on orientation and scrollSource geometry\n * @param scrollSource {DOMElement}\n * @param orientation {String}\n * @returns {number}\n */\nexport function calculateMaxScrollOffset(scrollSource, orientation) {\n  // TODO: Support other writing directions.\n  if (orientation === \"block\") orientation = \"vertical\";\n  else if (orientation === \"inline\") orientation = \"horizontal\";\n  if (orientation === \"vertical\")\n    return scrollSource.scrollHeight - scrollSource.clientHeight;\n  else if (orientation === \"horizontal\")\n    return scrollSource.scrollWidth - scrollSource.clientWidth;\n}\n\nfunction resolvePx(cssValue, resolvedLength) {\n  if (cssValue instanceof CSSUnitValue) {\n    if (cssValue.unit == \"percent\")\n      return cssValue.value * resolvedLength / 100;\n    else if (cssValue.unit == \"px\")\n      return cssValue.value;\n    else\n      throw TypeError(\"Unhandled unit type \" + cssValue.unit);\n  } else if (cssValue instanceof CSSMathSum) {\n    let total = 0;\n    for (let value of cssValue.values) {\n      total += resolvePx(value, resolvedLength);\n    }\n    return total;\n  }\n  throw TypeError(\"Unsupported value type: \" + typeof(cssValue));\n}\n\nexport function calculateScrollOffset(\n  autoValue,\n  scrollSource,\n  orientation,\n  offset,\n  fn\n) {\n  if (fn)\n    return fn(\n      scrollSource,\n      orientation,\n      offset,\n      autoValue.value == 0 ? \"start\" : \"end\"\n    );\n  // TODO: Support other writing directions.\n  if (orientation === \"block\") orientation = \"vertical\";\n  else if (orientation === \"inline\") orientation = \"horizontal\";\n\n  let maxValue =\n    orientation === \"vertical\"\n      ? scrollSource.scrollHeight - scrollSource.clientHeight\n      : scrollSource.scrollWidth - scrollSource.clientWidth;\n  let parsed = parseLength(offset === AUTO ? autoValue : offset);\n  return resolvePx(parsed, maxValue);\n}\n\n/**\n * Removes a Web Animation instance from ScrollTimeline\n * @param scrollTimeline {ScrollTimeline}\n * @param animation {Animation}\n * @param options {Object}\n */\nexport function removeAnimation(scrollTimeline, animation) {\n  let animations = scrollTimelineOptions.get(scrollTimeline).animations;\n  let index = animations.indexOf(animation);\n  if (index === -1) return;\n  animations.splice(index, 1);\n}\n\n/**\n * Attaches a Web Animation instance to ScrollTimeline\n * @param scrollTimeline {ScrollTimeline}\n * @param animation {Animation}\n * @param options {Object}\n */\nexport function addAnimation(scrollTimeline, animation, options) {\n  let animations = scrollTimelineOptions.get(scrollTimeline).animations;\n  animations.push(animation);\n  updateInternal(scrollTimeline);\n}\n\n// TODO: this is a private function used for unit testing add function\nexport function _getStlOptions(scrollTimeline) {\n  return scrollTimelineOptions.get(scrollTimeline);\n}\n\nexport class ScrollTimeline {\n  constructor(options) {\n    scrollTimelineOptions.set(this, {\n      scrollSource: null,\n      orientation: \"block\",\n      startScrollOffset: AUTO,\n      endScrollOffset: AUTO,\n      timeRange: AUTO,\n\n      // Internal members\n      animations: [],\n    });\n    this.scrollSource =\n      (options && options.scrollSource) || document.scrollingElement;\n    this.orientation = (options && options.orientation) || \"block\";\n    this.startScrollOffset = (options && options.startScrollOffset) || AUTO;\n    this.endScrollOffset = (options && options.endScrollOffset) || AUTO;\n    this.timeRange = options && options.timeRange !== undefined ? options.timeRange : \"auto\";\n  }\n\n  set scrollSource(element) {\n    if (this.scrollSource)\n      scrollEventSource(this.scrollSource).removeEventListener(\"scroll\", () =>\n        updateInternal(this)\n      );\n    if (!(element instanceof Element)) element = document.scrollingElement;\n    scrollTimelineOptions.get(this).scrollSource = element;\n    scrollEventSource(element).addEventListener(\"scroll\", () =>\n      updateInternal(this)\n    );\n    updateInternal(this);\n  }\n\n  get scrollSource() {\n    return scrollTimelineOptions.get(this).scrollSource;\n  }\n\n  set orientation(orientation) {\n    if (\n      [\"block\", \"inline\", \"horizontal\", \"vertical\"].indexOf(orientation) === -1\n    ) {\n      throw TypeError(\"Invalid orientation\");\n    }\n    scrollTimelineOptions.get(this).orientation = orientation;\n    updateInternal(this);\n  }\n\n  get orientation() {\n    return scrollTimelineOptions.get(this).orientation;\n  }\n\n  set startScrollOffset(offset) {\n    if (offset == \"auto\")\n      offset = AUTO;\n    let currentStlOptions = scrollTimelineOptions.get(this);\n    // Allow extensions to override scroll offset calculation.\n    currentStlOptions.startScrollOffsetFunction = null;\n    for (let i = 0; i < extensionScrollOffsetFunctions.length; i++) {\n      let result = extensionScrollOffsetFunctions[i].parse(offset);\n      if (result !== undefined) {\n        offset = result;\n        currentStlOptions.startScrollOffsetFunction =\n          extensionScrollOffsetFunctions[i].evaluate;\n        break;\n      }\n    }\n    if (offset != AUTO && !scrollTimelineOptions.get(this).startScrollOffsetFunction) {\n      let parsed = parseLength(offset);\n      // TODO: This should check CSSMathSum values as well.\n      if (!parsed || (parsed instanceof CSSUnitValue && parsed.unit == \"number\"))\n        throw TypeError(\"Invalid start offset.\");\n    }\n    currentStlOptions.startScrollOffset = offset;\n    updateInternal(this);\n  }\n\n  get startScrollOffset() {\n    return scrollTimelineOptions.get(this).startScrollOffset;\n  }\n\n  set endScrollOffset(offset) {\n    if (offset == \"auto\")\n      offset = AUTO;\n    // Allow extensions to override scroll offset calculation.\n    scrollTimelineOptions.get(this).endScrollOffsetFunction = null;\n    for (let i = 0; i < extensionScrollOffsetFunctions.length; i++) {\n      let result = extensionScrollOffsetFunctions[i].parse(offset);\n      if (result !== undefined) {\n        offset = result;\n        scrollTimelineOptions.get(this).endScrollOffsetFunction =\n          extensionScrollOffsetFunctions[i].evaluate;\n        break;\n      }\n    }\n    if (offset != AUTO && !scrollTimelineOptions.get(this).startScrollOffsetFunction) {\n      let parsed = parseLength(offset);\n      // TODO: This should check CSSMathSum values as well.\n      if (!parsed || (parsed instanceof CSSUnitValue && parsed.unit == \"number\"))\n        throw TypeError(\"Invalid end offset.\");\n    }\n    scrollTimelineOptions.get(this).endScrollOffset = offset;\n    updateInternal(this);\n  }\n\n  get endScrollOffset() {\n    return scrollTimelineOptions.get(this).endScrollOffset;\n  }\n\n  set timeRange(range) {\n    if (range != \"auto\") {\n      // Check for a valid number, which if finite and not NaN.\n      if (typeof(range) != \"number\" || !Number.isFinite(range) || range != range)\n        throw TypeError(\"Invalid timeRange value\");\n    }\n    scrollTimelineOptions.get(this).timeRange = range;\n    updateInternal(this);\n  }\n\n  get timeRange() {\n    return scrollTimelineOptions.get(this).timeRange;\n  }\n\n  get phase() {\n    // Per https://drafts.csswg.org/scroll-animations-1/#phase-algorithm\n    // Step 1\n    let unresolved = null;\n    if (!this.scrollSource) return \"inactive\";\n    let startOffset = calculateScrollOffset(\n      new CSSUnitValue(0, 'percent'),\n      this.scrollSource,\n      this.orientation,\n      this.startScrollOffset,\n      scrollTimelineOptions.get(this).startScrollOffsetFunction\n    );\n    let endOffset = calculateScrollOffset(\n      new CSSUnitValue(100, 'percent'),\n      this.scrollSource,\n      this.orientation,\n      this.endScrollOffset,\n      scrollTimelineOptions.get(this).endScrollOffsetFunction\n    );\n    let effectiveScrollRange = endOffset - startOffset;\n    if (effectiveScrollRange <= 0)\n      return \"inactive\";\n\n    // Step 2\n    // TODO: Support other writing directions.\n    let currentScrollOffset = this.scrollSource.scrollTop\n    if (this.orientation === 'inline' || this.orientation === 'horizontal') {\n      currentScrollOffset = this.scrollSource.scrollLeft\n    }\n\n    // Step 3\n    if (currentScrollOffset < startOffset)\n      return \"before\";\n    if (currentScrollOffset >= endOffset)\n      return \"after\";\n    return \"active\"\n  }\n\n  get currentTime() {\n    // Per https://wicg.github.io/scroll-animations/#current-time-algorithm\n    // Step 1\n    let unresolved = null;\n    if (!this.scrollSource) return unresolved;\n    let startOffset = calculateScrollOffset(\n      new CSSUnitValue(0, 'percent'),\n      this.scrollSource,\n      this.orientation,\n      this.startScrollOffset,\n      scrollTimelineOptions.get(this).startScrollOffsetFunction\n    );\n    let endOffset = calculateScrollOffset(\n      new CSSUnitValue(100, 'percent'),\n      this.scrollSource,\n      this.orientation,\n      this.endScrollOffset,\n      scrollTimelineOptions.get(this).endScrollOffsetFunction\n    );\n    let timeRange = calculateTimeRange(this);\n\n    // Step 2\n    // TODO: Support other writing directions.\n    let currentScrollOffset = this.scrollSource.scrollTop\n    if (this.orientation === 'inline' || this.orientation === 'horizontal') {\n      currentScrollOffset = this.scrollSource.scrollLeft\n    }\n\n    // Step 3\n    if (currentScrollOffset < startOffset)\n      return 0;\n\n    // Step 4\n    if (currentScrollOffset >= endOffset)\n      return timeRange;\n\n    // Step 5\n    return (\n      ((currentScrollOffset - startOffset) / (endOffset - startOffset)) *\n      timeRange\n    );\n  }\n\n  get __polyfill() {\n    return true;\n  }\n}\n","import {\n  ScrollTimeline,\n  installScrollOffsetExtension,\n  addAnimation,\n  removeAnimation\n} from \"./scroll-timeline-base\";\n\nconst nativeElementAnimate = window.Element.prototype.animate;\nconst nativeAnimation = window.Animation;\n\n/**\n * Decides whether to use native Element.prototype.animate function in regular fashion or pass it to our polyfill\n *  so its current time is driven by scroll event\n * @param keyframes {Object} array of keyframe objects\n * @param options {Object} WAAPI options object\n * @returns {Function}\n */\n\n// Create an alternate Animation class which proxies API requests.\n// TODO: Create a full-fledged proxy so missing methods are automatically\n// fetched from Animation.\nlet proxyAnimations = new WeakMap();\nexport class ProxyAnimation {\n  constructor(effect, timeline) {\n    if (effect instanceof nativeAnimation) {\n      proxyAnimations.set(this, {\n        animation: effect,\n        timeline,\n        playState: \"idle\",\n      });\n      return;\n    }\n    const isScrollAnimation = timeline && timeline instanceof ScrollTimeline;\n    const animationTimeline = isScrollAnimation ? undefined : timeline;\n    proxyAnimations.set(this, {\n      animation: new nativeAnimation(effect, animationTimeline),\n      timeline: isScrollAnimation ? timeline : undefined,\n      playState: isScrollAnimation ? \"idle\" : null,\n    });\n  }\n\n  get effect() {\n    return proxyAnimations.get(this).animation.effect;\n  }\n  set effect(newEffect) {\n    return proxyAnimations.get(this).animation.effect = newEffect;\n  }\n\n  get timeline() {\n    const internalTimeline = proxyAnimations.get(this).timeline;\n    if (internalTimeline !== undefined)\n      return internalTimeline;\n    return proxyAnimations.get(this).animation.timeline;\n  }\n\n  get startTime() {\n    const internalPlayState = proxyAnimations.get(this).playState;\n    if (!internalPlayState)\n      return proxyAnimations.get(this).animation.startTime;\n    if (internalPlayState == \"running\")\n      return 0;\n    return null;\n  }\n  set startTime(value) {\n    proxyAnimations.get(this).animation.startTime = value;\n  }\n\n  get currentTime() {\n    return proxyAnimations.get(this).animation.currentTime;\n  }\n  set currentTime(value) {\n    proxyAnimations.get(this).animation.currentTime = value;\n  }\n\n  get playbackRate() {\n    return proxyAnimations.get(this).animation.playbackRate;\n  }\n  set playbackRate(value) {\n    proxyAnimations.get(this).animation.playbackRate = value;\n  }\n\n  get playState() {\n    const internalPlayState = proxyAnimations.get(this).playState;\n    if (internalPlayState)\n      return internalPlayState;\n    return proxyAnimations.get(this).animation.playState;\n  }\n\n  get replaceState() {\n    return proxyAnimations.get(this).animation.pending;\n  }\n\n  get pending() {\n    return proxyAnimations.get(this).animation.pending;\n  }\n\n  finish() {\n    proxyAnimations.get(this).animation.finish();\n    let internalTimeline = proxyAnimations.get(this).timeline;\n    if (!internalTimeline) {\n      proxyAnimations.get(this).animation.play();\n      return;\n    }\n    if (proxyAnimations.get(this).playState == \"finished\")\n      return;\n    proxyAnimations.get(this).playState = \"finished\";\n    removeAnimation(internalTimeline, proxyAnimations.get(this).animation);\n  }\n\n  play() {\n    let internalTimeline = proxyAnimations.get(this).timeline;\n    if (!internalTimeline) {\n      proxyAnimations.get(this).animation.play();\n      return;\n    }\n    if (proxyAnimations.get(this).animation.playState != \"paused\") {\n      proxyAnimations.get(this).animation.play();\n      proxyAnimations.get(this).animation.pause();\n    }\n    if (proxyAnimations.get(this).playState == \"running\")\n      return;\n    addAnimation(internalTimeline, proxyAnimations.get(this).animation);\n    proxyAnimations.get(this).playState = \"running\";\n  }\n\n  pause() {\n    let internalTimeline = proxyAnimations.get(this).timeline;\n    if (!internalTimeline) {\n      proxyAnimations.get(this).animation.pause();\n      return;\n    }\n    if (proxyAnimations.get(this).playState == \"paused\")\n      return;\n    proxyAnimations.get(this).playState = \"paused\";\n    removeAnimation(internalTimeline, proxyAnimations.get(this).animation);\n  }\n\n  reverse() {\n    proxyAnimations.get(this).animation.reverse();\n  }\n\n  updatePlaybackRate(rate) {\n    proxyAnimations.get(this).animation.updatePlaybackRate(rate);\n  }\n\n  persist() {\n    proxyAnimations.get(this).animation.persist();\n  }\n\n  get id() {\n    return proxyAnimations.get(this).animation.id;\n  }\n\n  cancel() {\n    proxyAnimations.get(this).animation.cancel();\n    let internalTimeline = proxyAnimations.get(this).timeline;\n    if (!internalTimeline)\n      return;\n    if (proxyAnimations.get(this).playState == \"idle\" ||\n        proxyAnimations.get(this).playState == \"finished\")\n      return;\n    if (proxyAnimations.get(this).playState == \"running\")\n      removeAnimation(internalTimeline, proxyAnimations.get(this).animation);\n    proxyAnimations.get(this).playState = \"finished\";\n  }\n\n  get onfinish() {\n    return proxyAnimations.get(this).animation.onfinish;\n  }\n  set onfinish(value) {\n    proxyAnimations.get(this).animation.onfinish = value;\n  }\n  get oncancel() {\n    return proxyAnimations.get(this).animation.oncancel;\n  }\n  set oncancel(value) {\n    proxyAnimations.get(this).animation.oncancel = value;\n  }\n  get onremove() {\n    return proxyAnimations.get(this).animation.onremove;\n  }\n  set onremove(value) {\n    proxyAnimations.get(this).animation.onremove = value;\n  }\n\n  get finished() {\n    proxyAnimations.get(this).animation.finished;\n  }\n\n  get ready() {\n    proxyAnimations.get(this).animation.ready;\n  }\n\n};\n\nexport function animate(keyframes, options) {\n  let timeline = options.timeline;\n  if (!timeline || !(timeline instanceof ScrollTimeline)) {\n    return nativeElementAnimate.apply(this, [keyframes, options]);\n  }\n  delete options.timeline;\n  let animation = nativeElementAnimate.apply(this, [keyframes, options]);\n  // TODO: Create a proxy for the animation to control and fake the animation\n  // play state.\n  animation.pause();\n  let proxyAnimation = new ProxyAnimation(animation, timeline);\n  proxyAnimation.play();\n  return proxyAnimation;\n};\n\n\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { parseLength } from \"./utils\";\n\nlet IntersectionOptions = new WeakMap();\n\n// Margin is stored as a 4 element array [top, right, bottom, left] but can be\n// specified using anywhere from 1 - 4 elements. This map defines how to convert\n// various length inputs to their components.\nconst TOP = 0;\nconst RIGHT = 1;\nconst BOTTOM = 2;\nconst LEFT = 3;\nconst MARGIN_MAP = [\n  // 1 length maps to all positions.\n  [[TOP, RIGHT, BOTTOM, LEFT]],\n  // 2 lengths maps to vertical and horizontal margins.\n  [\n    [TOP, BOTTOM],\n    [RIGHT, LEFT],\n  ],\n  // 3 lengths maps to top, horizontal, bottom margins.\n  [[TOP], [RIGHT, LEFT], [BOTTOM]],\n  // 4 lengths maps to each component.\n  [[TOP], [RIGHT], [BOTTOM], [LEFT]],\n];\n\nclass IntersectionBasedOffset {\n  constructor(value) {\n    IntersectionOptions.set(this, {\n      target: null,\n      edge: \"start\",\n      threshold: 0,\n      rootMargin: [\n        [0, \"px\"],\n        [0, \"px\"],\n        [0, \"px\"],\n        [0, \"px\"],\n      ],\n    });\n    this.target = value.target;\n    this.edge = value.edge || \"start\";\n    this.threshold = value.threshold || 0;\n    this.rootMargin = value.rootMargin || \"0px 0px 0px 0px\";\n    this.clamp = value.clamp || false;\n  }\n\n  set target(element) {\n    if (!(element instanceof Element)) {\n      IntersectionOptions.get(this).target = null;\n      throw Error(\"Intersection target must be an element.\");\n    }\n    IntersectionOptions.get(this).target = element;\n  }\n\n  get target() {\n    return IntersectionOptions.get(this).target;\n  }\n\n  set edge(value) {\n    if ([\"start\", \"end\"].indexOf(value) == -1) return;\n    IntersectionOptions.get(this).edge = value;\n  }\n\n  get edge() {\n    return IntersectionOptions.get(this).edge;\n  }\n\n  set threshold(value) {\n    let threshold = parseFloat(value);\n    // Throw a TypeError for a parse error.\n    if (threshold != threshold)\n      throw TypeError(\"Invalid threshold.\");\n    // Throw a RangeError for out of range threshold:\n    // https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n    if (threshold < 0 || threshold > 1)\n      throw RangeError(\"threshold must be in the range [0, 1]\");\n    IntersectionOptions.get(this).threshold = threshold;\n  }\n\n  get threshold() {\n    return IntersectionOptions.get(this).threshold;\n  }\n\n  set rootMargin(value) {\n    let margins = value.split(/ +/);\n    if (margins.length < 1 || margins.length > 4)\n      throw TypeError(\n        \"rootMargin must contain between 1 and 4 length components\"\n      );\n    let parsedMargins = [[], [], [], []];\n    for (let i = 0; i < margins.length; i++) {\n      let parsedValue = parseLength(margins[i]);\n      if (!parsedValue) throw TypeError(\"Unrecognized rootMargin length\");\n      let positions = MARGIN_MAP[margins.length - 1][i];\n      for (let j = 0; j < positions.length; j++) {\n        parsedMargins[positions[j]] = [\n          parseFloat(parsedValue.value),\n          parsedValue.unit,\n        ];\n      }\n    }\n    IntersectionOptions.get(this).rootMargin = parsedMargins;\n  }\n\n  get rootMargin() {\n    // TODO: Simplify to the shortest matching specification for the given margins.\n    return IntersectionOptions.get(this)\n      .rootMargin.map((margin) => {\n        return margin.join(\"\");\n      })\n      .join(\" \");\n  }\n\n  set clamp(value) {\n    // This is just for testing alternative proposals - not intended to be part\n    // of the specification.\n    IntersectionOptions.get(this).clamp = !!value;\n  }\n}\n\nexport function parseOffset(value) {\n  if (value.target) return new IntersectionBasedOffset(value);\n}\n\nfunction resolveLength(length, containerSize) {\n  if (length[1] == \"percent\") return (length[0] * containerSize) / 100;\n  // Assumption is only px or % will be passed in.\n  // TODO: Support other length types (e.g. em, vh, etc).\n  return length[0];\n}\n\nexport function calculateOffset(scrollSource, orientation, offset, startOrEnd) {\n  // TODO: Support other writing directions.\n  if (orientation == \"block\") orientation = \"vertical\";\n  else if (orientation == \"inline\") orientation = \"horizontal\";\n  let originalViewport =\n    scrollSource == document.scrollingElement\n      ? {\n          left: 0,\n          right: scrollSource.clientWidth,\n          top: 0,\n          bottom: scrollSource.clientHeight,\n          width: scrollSource.clientWidth,\n          height: scrollSource.clientHeight,\n        }\n      : scrollSource.getBoundingClientRect();\n\n  // Resolve margins and offset viewport.\n  let parsedMargins = IntersectionOptions.get(offset).rootMargin;\n  let computedMargins = [];\n  for (let i = 0; i < 4; i++) {\n    computedMargins.push(\n      resolveLength(\n        parsedMargins[i],\n        i % 2 == 0 ? originalViewport.height : originalViewport.width\n      )\n    );\n  }\n  let viewport = {\n    left: originalViewport.left - computedMargins[LEFT],\n    right: originalViewport.right + computedMargins[RIGHT],\n    width:\n      originalViewport.right -\n      originalViewport.left +\n      computedMargins[LEFT] +\n      computedMargins[RIGHT],\n    top: originalViewport.top - computedMargins[TOP],\n    bottom: originalViewport.bottom + computedMargins[BOTTOM],\n    height:\n      originalViewport.bottom -\n      originalViewport.top +\n      computedMargins[TOP] +\n      computedMargins[BOTTOM],\n  };\n\n  let clamped = IntersectionOptions.get(offset).clamp;\n  let target = offset.target.getBoundingClientRect();\n  let threshold = offset.threshold;\n  // Invert threshold for start position.\n  if (offset.edge == \"start\") threshold = 1 - threshold;\n  // Projected point into the scroller scroll range.\n  if (orientation == \"vertical\") {\n    let point =\n      target.top +\n      target.height * threshold -\n      viewport.top +\n      scrollSource.scrollTop;\n    if (clamped) {\n      if (offset.edge == \"end\") return Math.max(0, point - viewport.height);\n      return Math.min(point, scrollSource.scrollHeight - viewport.height);\n    } else {\n      if (offset.edge == \"end\") return point - viewport.height;\n      return point;\n    }\n  } else {\n    // orientation == 'horizontal'\n    let point =\n      target.left +\n      target.width * threshold -\n      viewport.left +\n      scrollSource.scrollLeft;\n    if (clamped) {\n      if (offset.edge == \"end\") return Math.max(0, point - viewport.width);\n      return Math.min(point, scrollSource.scrollWidth - viewport.width);\n    } else {\n      if (offset.edge == \"end\") return point - viewport.width;\n      return point;\n    }\n  }\n}\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n  ScrollTimeline,\n  installScrollOffsetExtension\n} from \"./scroll-timeline-base\";\nimport {\n  animate,\n  ProxyAnimation\n} from \"./proxy-animation.js\";\nimport { calculateOffset, parseOffset } from \"./intersection-based-offset\";\n\ninstallScrollOffsetExtension(parseOffset, calculateOffset);\n\nif (\n  !Reflect.defineProperty(window, \"ScrollTimeline\", { value: ScrollTimeline })\n) {\n  throw Error(\n    \"Error installing ScrollTimeline polyfill: could not attach ScrollTimeline to window\"\n  );\n}\n\nif (!Reflect.defineProperty(Element.prototype, \"animate\", { value: animate })) {\n  throw Error(\n    \"Error installing ScrollTimeline polyfill: could not attach WAAPI's animate to DOM Element\"\n  );\n}\nif (!Reflect.defineProperty(window, \"Animation\", {value: ProxyAnimation})) {\n  throw Error(\"Error installing Animation constructor.\");\n}\n"],"names":["parseLength","obj","CSSUnitValue","CSSMathSum","matches","trim","match","AUTO","CSSKeywordValue","scrollTimelineOptions","WeakMap","extensionScrollOffsetFunctions","scrollEventSource","scrollSource","document","scrollingElement","updateInternal","scrollTimelineInstance","animations","get","length","currentTime","i","playState","cancel","calculateScrollOffset","autoValue","orientation","offset","fn","value","maxValue","scrollHeight","clientHeight","scrollWidth","clientWidth","resolvePx","cssValue","resolvedLength","unit","TypeError","total","values","removeAnimation","scrollTimeline","animation","index","indexOf","splice","ScrollTimeline","options","set","this","startScrollOffset","endScrollOffset","timeRange","undefined","_createClass","element","removeEventListener","_this","Element","addEventListener","currentStlOptions","startScrollOffsetFunction","result","parse","evaluate","parsed","endScrollOffsetFunction","range","Number","isFinite","startOffset","endOffset","currentScrollOffset","scrollTop","scrollLeft","Math","max","effect","getComputedTiming","activeDuration","Infinity","calculateTimeRange","nativeElementAnimate","window","prototype","animate","nativeAnimation","Animation","proxyAnimations","ProxyAnimation","timeline","isScrollAnimation","finish","internalTimeline","play","pause","push","reverse","updatePlaybackRate","rate","persist","newEffect","internalPlayState","startTime","playbackRate","pending","id","onfinish","oncancel","onremove","IntersectionOptions","MARGIN_MAP","IntersectionBasedOffset","target","edge","threshold","rootMargin","clamp","Error","parseFloat","RangeError","margins","split","parsedMargins","parsedValue","positions","j","map","margin","join","startOrEnd","originalViewport","left","right","top","bottom","width","height","getBoundingClientRect","computedMargins","viewport","clamped","point","min","Reflect","defineProperty","keyframes","apply","proxyAnimation"],"mappings":"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"}